# 지원이에게 2진 수열을 가르쳐 주기 위해, 지원이 아버지는 그에게 타일들을 선물해주셨다.
# 그리고 이 각각의 타일들은 0 또는 1이 쓰여 있는 낱장의 타일들이다.
# 어느 날 짓궂은 동주가 지원이의 공부를 방해하기 위해 0이 쓰여진 낱장의 타일들을 붙여서 
# 한 쌍으로 이루어진 00 타일들을 만들었다. 
# 결국 현재 1 하나만으로 이루어진 타일 또는
# 0타일을 두 개 붙인 한 쌍의 00타일들만이 남게 되었다.
# 그러므로 지원이는 타일로 더 이상 크기가 N인 모든 2진 수열을 만들 수 없게 되었다. 
# 예를 들어, N=1일 때 1만 만들 수 있고, 
# N=2일 때는 00, 11을 만들 수 있다. (01, 10은 만들 수 없게 되었다.) 
# 또한 N=4일 때는 0011, 0000, 1001, 1100, 1111 등 총 5개의 2진 수열을 만들 수 있다.
# 우리의 목표는 N이 주어졌을 때 지원이가 만들 수 있는 모든 가짓수를 세는 것이다.
# 단 타일들은 무한히 많은 것으로 가정하자.


#방법 (1)----------------------------------------------------------
num = int(input())

a, b = 1, 2 #크기가 1인 경우엔 1가지 경우의 수, 크기가 2인 경우엔 2가지 경우의 수 

if num == 1: 
    print(1)
elif num == 2:
    print(2)
else:
    for i in range(3, num+1): #3보다 작은 경우의 수는 이미 구했기 때문에 3부터 시작
        c = (a + b) % 15746 #num 크기의 타일 가짓 수는 num-1과 num-2와 동일함
        a, b = b, c #a에 b 값을 저장하고 b에 c 값을 저장.
                    #첫 번째 loop를 돌 때
                    #c = (1+2) % 15746
                    #a, b = 2, 3
                    #두 번째 loop를 돌 때
                    #c = (2+3) & 15746
                    #a, b= 3, 5
    print(b % 15746) #for문을 빠져나왔을 때 b가 답이 됨

#방법 (2)----------------------------------------------------------
# 위 방법과 접근법은 동일하나 배열을 사용함.
num = int(input())
dp = [0] * (num + 1)

dp[0], dp[1] = 1, 2

if num == 1:
    print(1)
elif num == 2:
    print(2)
else:
    for i in range(2, num):
        dp[i] = (dp[i-1] + dp[i-2]) % 15746
    print(dp[num-1])